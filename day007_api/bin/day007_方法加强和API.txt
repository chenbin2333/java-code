1.方法重载overload：【掌握】
	1.1 概念：在同一个类中，方法名相同，形参列表不同，就是方法重载
	1.2 作用：
		1. 可以减少命名冲突
		2. 可以减少程序员记忆成本，方便解决了一类问题
			
	1.3 使用：
		声明方法的时候，写不同的形参即可。
		调用方法的时候，程序会根据参数数量、类型、顺序自动匹配调用的
		
	1.4 方法注意事项：【了解】  
		1.6.1 方法调用的时候，实参(变量/值) 必须和 形参完全一致
		1.6.2 一个类中，只能有一个方法签名
		1.6.3 返回值类型是void，不能用变量接受，不能放在打印语句中
		1.6.4 返回值不是void，必须return一个数据，并且数据类型和返回值类型完全一致
		1.6.5 return的数据，如果在if或者循环语句中，必须保证在条件语句和循环语句不成立的情况下，也有数据的返回
		
2.  可变参数（掌握）
	1. 概念：就是将方法参数个数不定的需求简化的一种语法，本质是数组。
	2. 作用：简化代码，将数组的创建工作交给了编译器。
	3. 语法：
		修饰符 返回值类型 方法名(其他数据类型  变量,数据类型... 变量){// 在调用这个方法的时候，可以传入多个相同类型的实参，实参之间用逗号隔开
			方法体		
		}
	
	4. 注意：
		4.1 可变参数本质就是一个数组，只不过这个数组是编译器帮我们程序员创建的
		4.2 一个方法只能有一个可变参数，并且只能在形参列表最末尾		

3. 值传递和引用传递（理解）
	画图
	
4. API使用(重点)减少程序员工作量，提高开发效率的。
	1. Arrays工具类【所有方法都是static方法】，是用来操作数组的
	2. 使用：
		1. 点击索引，在搜索栏，输入要使用的类Arrays
		2. 简单看一下该类的介绍，能看懂就看，看不懂的就不用管
		3. 直接看下这个类中的方法，然后看一下方法的介绍和使用方式
			Modifier（修饰符）有static的调用方式是：类名.方法名(实参);
			Type（返回值类型） ：决定可以用什么类型变量接受方法调用结果
			Method （方法名）：看形参列表，调用的时候，必须传入对应的实参
			Description （方法的描述和介绍）
			
		4. 	看不懂方法的描述，就直接调用一下方法，来看效果 。 直接百度
			看是否有static修饰，如果有用：类名.方法名(实参);
			看是否有static修饰，如果没有用：对象名.方法名(实参);
			
			
	方法使用窍门：
		1. 调用方法的时候，如果有返回值，则将返回值打印一下，看一下就知道效果		
		1. 调用方法的时候，如果没有返回值，则将参数打印一下调用方法 前 和 后的区别，就知道效果		
			
	3. Arrays中的常用方法:(重点)
		1. public static String toString(int[] arr)拼接数组中元素，格式：[值1,值2...]
		2. public static void sort(int[] arr)将数组中的元素排序，默认升序。从小到大
		3. public static int binarySearch(int[] arr,int a)查询变量a在数组arr中第一次出现的下标。
			如果没有找到返回 负数。注意：1.必须要求数组是排好顺序的（升序和降序都可以）2.不能有重复元素的数组
			
		4. public static int[] copyOf (int[] arr,int newLength)数组的扩容和缩容方法
			扩容：如果newLength大于arr数组中用来的长度，就是扩容，扩容后，arr数组所有的元素都已经复制到新数组中
		 	缩容：如果newLength小于arr数组中用来的长度，就是缩容，缩容后，arr数组从后向前缩
			
		5. static int[] copyOfRange(int[] arr, int from, int to) 
				将指定数组arr的指定下标范围从from到to之间的元素，复制到新数组中。  【含头不含尾】  
			
		6. public static void fill(int[] arr,int a)将数组arr中的元素批量初始化为a
			
package day003_var_operation;

/**
 *	1. 变量（重重点）	
	  1. 变量概念：就是一个盒子（容器），用来装数据的。同一时间只能装一个数据。
	  2. 变量作用：用来装好数据，进行运算处理的。
	  3. 使用：（重点）
	  		1. 声明变量
	  			语法：数据类型 变量名;
	  			例如：int age;//声明一个int类型的变量age(年龄)
	  			
	  		2. 变量赋值： =
	  			语法：变量名 = 值; //=右边的值，赋值给 =左边的变量。注意：必须保证值和变量的数据类型一致
	  			例如：age = 23;//将23赋值给变量age。注意：必须保证值23和变量age的数据类型一致
	  		
	  		3. 变量取值：
	  			语法：变量名;
	  			
	  			使用方式：
	  				1. 直接打印输出
	  				2. 做运算（+，-，*，/....）
	  				3. 赋值给另外的变量
	  				
	  				4. 作为方法参数 使用（先不管。学习方法再用）
	  				
	  4. 注意事项：
			1. 变量特殊类型的使用（掌握）
			1.1. long类型	整数型默认类型是int
				long lon = 1L;//将等号右边的long类型的值1L赋值给等号左边的变量lon
				
			1.2. float类型  浮点型默认类型是double
				float f = 3.14F;
				
			1.3 double类型
				double dou = 3.14;
					
				//科学计数法
				double dou2 = 3.14E2;
				double dou3 = 3.14E-2;
				
			1.4. char类型
				基本使用 （掌握）
				char c = '值';
				
				//以下4种使用作为了解
				//使用方式2： 声明char类型变量赋值为 int值	注意，不能超过char的表示范围
				char c2 = 65;//将65所对应的字符赋值给c2
				
				//char取值范围：[0,65535]
				char c3 = 22000;//将65所对应的字符赋值给c2
				
				//使用方式3： 声明int类型变量赋值为char值
				int i = 'A';//这里是将字符A所对应的int值赋值给变量i
				
				//使用方式4：十六进制的表示
				char c4 = '\u0041';//0041是十进制的65，在字符集中对应的是A字符
				
				//使用方式5：特殊字符的使用
				char c5 = '\'';//打印'
				
				char c6 = '\\';//打印\
 */
public class _01Var {

	public static void main(String[] args) {
		// ======================= 1. int类型变量 =============================
		// 1. 声明一个int类型变量a，赋值1
		int a = 1;
		// 2. 变量取值，这里直接打印输出a
		System.out.println(a);
		
		// ======================= 2. byte、short类型变量 =============================
		// 1. 声明一个byte类型变量b，赋值2
//		byte b = 128;// 报错，因为128超过byte表示范围，所以报错
		byte b = 2;
		// 2. 变量取值，这里直接打印输出b
		System.out.println(b);
		
		// ======================= 3. long类型变量 =============================
		// 1. 声明一个long类型变量lon，赋值3
		long lon = 3;
		long lon2 = 2147483647;// int最大值是2147483647,会自动转换为long类型的值。
		// long类型变量要在值后面加上L，注意：不要加l
		long lon3 = 2147483648L;// 因为2147483648是默认int类型，现在超过了int最大表示范围
		// 2. 变量取值，这里直接打印输出lon
		System.out.println(lon);
		
		// ======================= 4. float类型变量 =============================
		// 1. 声明一个float类型变量f，赋值3.14
//		float f = 3.14;// 3.14默认是double类型，float装不下。
		// float类型变量要在值后面加上 f/F
		float f = 3.14f;// 3.14f是float类型的值
		// 2. 变量取值，这里直接打印输出f
		System.out.println(f);
		
		// ======================= 5. double类型变量 =============================
		// 1. 声明一个double类型变量doub，赋值3.14
		double doub = 3.14;
		// 2. 变量取值，这里直接打印输出doub
		System.out.println(doub);
		
		// ======================= 5. double类型变量【了解的】 =============================
		// 1. 声明一个double类型变量doub2，赋值3.14E2  【科学计数法】
		double doub2 = 3.14E2;// 3.14E2表示 3.14 * 10^2
		// 2. 变量取值，这里直接打印输出doub2
		System.out.println(doub2);
	
		// 1. 声明一个double类型变量doub2，赋值3.14E2  【科学计数法】
		double doub3 = 3.14E-2;// 3.14E-2表示 3.14 / 10^2
		// 2. 变量取值，这里直接打印输出doub3
		System.out.println(doub3);
		
		// ======================= 6. boolean类型变量 =============================
		// 1. 声明一个boolean类型变量boo，赋值true/false
		boolean boo = true;
		// 2. 变量取值，这里直接打印输出boo
		System.out.println(boo);
		
		// ======================= 7. char类型变量 =============================
		// 1. 声明一个char类型变量c，赋值'a'。注意：char类型变量声明赋值，必须用''，且''中只能一个字符
		char c = 'a';
		// 2. 变量取值，这里直接打印输出c
		System.out.println(c);
		
		// ======================= 以下char类型使用作为【了解】char表示范围[0, 65535] ===============
		// 使用方式2： 声明char类型变量c2赋值为 int值65  	注意，不能超过char的表示范围
		char c2 = 65;// 这里实际上是，将int类型65所对应的字符A赋值给c2
		// 打印c2
		System.out.println(c2);// A
		
		// 使用方式3： 声明int类型变量赋值为char值
		int i = 'A';// 声明一个int变量赋值字符'A'。这里实际上是将字符'A'对应的int值赋值给变量i
		System.out.println(i);// 65
		
		// 使用方式4：十六进制的表示
		char c3 = '\u0041';// 声明一个char类型变量c3，赋值为十六进制的 41。语法：不够4位前面补0，并且加上 '\\u'
		System.out.println(c3);// A
		
		// 使用方式5：特殊字符的使用。 需要转义一下
		char c4 = '\'';
		System.out.println(c4);
		
		// 引用类型变量使用，String类型，是字符串类型。语法: String 变量名 = "字符串值";
		String str = "123abc";// 声明了一个String类型变量str，赋值"123abc"
		// 打印str
		System.out.println(str);
		
		// 字符串可以跟其他变量一起使用【拼接】在字符串中+，表示连接符号
		int j = 8;
		System.out.println("j = " + j);// j = 8 
		
		// 练习【注意：在字符串之前+表示加法运算，字符串后 才表示连接符号】
		System.out.println(1 + 2 + "abc" + 1 + 2);// 3abc12
	}

}
